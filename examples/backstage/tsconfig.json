{
  //配置编译选项
  "compilerOptions": {
    "experimentalDecorators": true, // 启用实验性的ES装饰器
    "target": "esnext", // 编译目标语言的版本
    "module": "esnext", // 生成代码的模板标准
    "moduleResolution": "node", // 模块解析策略，ts默认用node的解析策略，即相对的方式导入
    "importHelpers": true, // 通过tslib引入helper函数，文件必须是模块
    "jsx": "react", // 在 .tsx文件里支持JSX
    "esModuleInterop": true,
    "allowJs": true, // 允许编译javascript文件
    "skipLibCheck": true,
    "strict": true, // 开启所有严格的类型检查
    "forceConsistentCasingInFileNames": true,
    "noImplicitAny": false, // 是否默认禁用 any
    "strictNullChecks": true, // 不允许把null、undefined赋值给其他类型的变量
    "strictFunctionTypes": true, // 不允许函数参数双向协变
    "noImplicitThis": true, // 不允许this有隐式的any类型
    "alwaysStrict": true, // 以严格模式解析并为每个源文件生成 "use strict"
    "noUnusedLocals": true, // 检查只声明、未使用的局部变量(只提示不报错)
    "noUnusedParameters": true, // 检查未使用的函数参数(只提示不报错)
    "noImplicitReturns": true, //每个分支都会有返回值
    "noFallthroughCasesInSwitch": true, //防止switch语句贯穿(即如果没有break语句后面不会执行)
    "resolveJsonModule": true, //允许导入json格式文件
    "isolatedModules": true, //将每个文件作为单独的模块
    "noEmit": true, // 不输出文件,即编译后不会生成任何js文件
    "sourceMap": true, // 是否生成map文件
    "baseUrl": ".",
    "typeRoots": ["src/typings", "node_modules/@types"],
    "paths": {
      "@/*": ["./src/*"]
    },
    "allowSyntheticDefaultImports": true
  }
}